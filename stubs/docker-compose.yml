version: '3'

services:
  main:
    build:
      context: ./node_modules/nocker/config/runtimes/15.0
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: nocker-1.0/app
    environment:
      WWWUSER: '${WWWUSER}'
      NOCKER: 1
    volumes:
      - '.:/var/app'
    ports:
      - '${APP_PORT:-3000}:3000'
    command: npm run start
    networks:
      - nocker
    depends_on:
      - redis
      - pgsql
      - mysql

  redis:
    image: 'redis:alpine'
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - 'nockerredis:/data'
    networks:
      - nocker

  memcached:
    image: 'memcached:alpine'
    ports:
      - '11211:11211'
    networks:
      - nocker

  pgsql:
    image: 'postgres:latest'
    ports:
      - '${FORWARD_PGSQL_DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: '${PGSQL_DB_NAME}'
      POSTGRES_USER: '${PGSQL_DB_USERNAME}'
      POSTGRES_PASSWORD: '${PGSQL_DB_PASSWORD}'
    volumes:
      - 'nockerpgsql:/var/lib/postgresql/data'
    networks:
      - nocker

  mysql:
    image: 'mysql:8.0'
    ports:
      - '${FORWARD_MYSQL_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_DB_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DB_NAME}'
      MYSQL_USER: '${MYSQL_DB_USERNAME}'
      MYSQL_PASSWORD: '${MYSQL_DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - 'nockermysql:/var/lib/mysql'
    networks:
      - nocker

  eventstore:
    image: 'eventstore/eventstore:20.6.1-buster-slim'
    ports:
      - 1113:1113
      - 2113:2113
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    networks:
      - nocker

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - nocker

networks:
  nocker:
    driver: bridge

volumes:
  nockerpgsql:
    driver: local
  nockermysql:
    driver: local
  nockerredis:
    driver: local
